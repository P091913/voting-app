// <auto-generated />
using BackendAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendAPI.Migrations
{
    [DbContext(typeof(BackendAPIContext))]
    partial class BackendAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("VotingApp.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("General_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("VotingApp.Models.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BusinessLogin_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("INTEGER");

                    b.HasKey("BusinessId");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("VotingApp.Models.BusinessLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BusinessLogin");
                });

            modelBuilder.Entity("VotingApp.Models.FinalTeamScores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AverageScore")
                        .HasColumnType("REAL");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Teams_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FinalTeamScores");
                });

            modelBuilder.Entity("VotingApp.Models.General", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Admin_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BusinessLogin_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StaffCoach_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Voter_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("General");
                });

            modelBuilder.Entity("VotingApp.Models.StaffCoach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("General_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StaffCoach");
                });

            modelBuilder.Entity("VotingApp.Models.TeamData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AdAppeal")
                        .HasColumnType("REAL");

                    b.Property<float>("AdAppealBusiness")
                        .HasColumnType("REAL");

                    b.Property<float>("Amazement")
                        .HasColumnType("REAL");

                    b.Property<float>("Creativity")
                        .HasColumnType("REAL");

                    b.Property<float>("PerfFunc")
                        .HasColumnType("REAL");

                    b.Property<float>("Performance")
                        .HasColumnType("REAL");

                    b.Property<float>("ProfCom")
                        .HasColumnType("REAL");

                    b.Property<float>("ProjectDesign")
                        .HasColumnType("REAL");

                    b.Property<int>("Team_id")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Theme")
                        .HasColumnType("REAL");

                    b.Property<float>("ThemeIntegration")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("TeamData");
                });

            modelBuilder.Entity("VotingApp.Models.Teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompeteLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MemberCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamData_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Team_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VotesReceived")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
